Script started on Thu 26 Jan 2017 10:34:20 PM EST
szhang146@matrix:~/Semester3/oop345/lab2> whoami
szhang146
szhang146@matrix:~/Semester3/oop345/lab2> cat Station.h Station.cpp Stations.h Stati ons.cpp
#pragma once
#include <string>
#include <iostream>
#include <fstream>
using namespace std;

namespace w2 {

   enum PassType {
      STUDENT_PASS, 
      ADULT_PASS, 
      PASS_COUNT
   };

   class Station {
      std::string stationName;
      int passes[PASS_COUNT];

   public:
      Station();
      Station(istream& is);
      void update();
      void restock();
      void report();
      void write(ostream& os);
   };

}
#include "Station.h"
#include <string>
#include <iomanip>
using namespace w2;
using namespace std;

Station::Station()
{
}

Station::Station(istream & is)
{
   string str;
   getline(is, str, ';');        // get station name
   stationName = str;
   is >> passes[STUDENT_PASS];   // get number of student passes
   is.ignore();
   is >> passes[ADULT_PASS];     // get number of adult passes
   is.ignore();
}

void Station::update()
{
   cout << stationName << "\n";
   cout << " Student Passes sold : ";
   int student;
   cin >> student;
   passes[STUDENT_PASS] -= student;
   cout << " Adult   Passes sold : ";
   int adult;
   cin >> adult;
   passes[ADULT_PASS] -= adult;
}

void Station::restock()
{
   cout << stationName << "\n";
   cout << " Student Passes added : ";
   int student;
   cin >> student;
   passes[STUDENT_PASS] += student;

   cout << " Adult   Passes added : ";
   int adult;
   cin >> adult;
   passes[ADULT_PASS] += adult;
}

void Station::report()
{
   cout << setfill(' ') << left << setw(19) << stationName;
   cout << right << setw(6) << fixed << passes[STUDENT_PASS];
   cout << right << setw(6) << fixed << passes[ADULT_PASS];
   cout << endl;
}

void Station::write(ostream& os)
{
   os << stationName << ';' << passes[STUDENT_PASS] << ' ' << passes[ADULT_PASS] << endl;
}
#pragma once
#include "Station.h"
#include <fstream>
#include <iostream>
#include <iomanip>
#include <string>	
using namespace std;

namespace w2
{
   class Stations
   {
      int stationAmount;
      Station* stationTable;
      char* file;
   public:
      Stations(char* fileName);
      ~Stations();
      void update();
      void restock();
      void report();
   };
}#include "Stations.h"
#include <cstring>
#include <cstdlib>
using namespace w2;
using namespace std;

Stations::Stations(char* fileName)
{
   file = fileName;
   cout << "Stations(" << fileName << ")" << endl;
   fstream is(file, ios::in);

   if (is.is_open())
   {
      is >> stationAmount;
      char c;
      is >> c;
      if (c != ';')
      {
         cerr << "File '" << file << "' expected a ';' but found a '" << c << "'. Can not continue." << endl;
         exit(2);
      }
      stationTable = new Station[stationAmount];
      for (int i = 0; i < stationAmount; i++){
         stationTable[i] = Station(is);
      }
      is.close();
   }
   else
   {
      cerr << "Cannot open file '" << file << "'\n" << endl;
      exit(1);
   }
}

Stations::~Stations()
{
   ofstream os(file);
   os.open(file, ios::trunc);
   if (os.is_open())
   {
      os << stationAmount << ';' << endl;
      for (int i = 0; i < stationAmount; i++) 
      {
         stationTable[i].write(os);
      }
      os.close();
   }
   else
   {
      cerr << "Cannot open file '" << file << "'\n" << endl;
      exit(3);
   }
   delete[] stationTable;
}

void Stations::update()
{
   cout << endl;
   cout << "Passes Sold  :" << endl;
   cout << "--------------";
   for (int i = 0; i < stationAmount; i++) {
      stationTable[i].update();
   }
   cout << endl;
}

void Stations::restock()
{
   cout << "Passes Added :" << endl;
   cout << "--------------";
   for (int i = 0; i < stationAmount; i++) {
      stationTable[i].restock();
   }
   cout << endl;
}

void Stations::report()
{
   cout << "Passes in Stock : Student Adult" << endl;
   cout << "-------------------------------" ;
   for (int i = 0; i < stationAmount; i++) {
      stationTable[i].report();
   }
}

szhang146@matrix:~/Semester3/oop345/lab2> g++ -o w2 w2.cpp Station.cpp Stations.cpp
szhang146@matrix:~/Semester3/oop345/lab2> w2 Stations.dat

Command Line : w2 Stations.dat 
Stations(Stations.dat)

Passes Sold  :
--------------
Spadina
 Student Passes sold : 5
 Adult   Passes sold : 8
Bathurst
 Student Passes sold : 34
 Adult   Passes sold : 52
Keele
 Student Passes sold : 21
 Adult   Passes sold : 13
Bay
 Student Passes sold : 67
 Adult   Passes sold : 65

Passes Added :
--------------
Spadina
 Student Passes added : 29
 Adult   Passes added : 52
Bathurst
 Student Passes added : 113
 Adult   Passes added : 61
Keele
 Student Passes added : 51
 Adult   Passes added : 52
Bay
 Student Passes added : 109
 Adult   Passes added : 107

Passes in Stock : Student Adult
-------------------------------
Spadina               100   200
Bathurst              200   300
Keele                 100   100
Bay                   200   200
szhang146@matrix:~/Semester3/oop345/lab2> exit
exit

Script done on Thu 26 Jan 2017 10:35:12 PM EST
